我有一個檔案資料(..\data\analysis\momentumNew\oPeriod3_hPeriod3\afterwardReturn-201001_202012-static2.csv)如下：

combination,remark,count,mean_return2,
201001-201004,loser,31,-13%,
201001-201004,winner,31,-2%,
201001-201004,winner - loser,-,10%,
201002-201005,loser,31,-1%,
201002-201005,winner,31,10%,
201002-201005,winner - loser,-,11%,
201003-201006,loser,32,9%,
201003-201006,winner,32,15%,
201003-201006,winner - loser,-,6%,


==========
我有一個檔案資料(..\data\analysis\momentumNew\oPeriod3_hPeriod3\afterwardReturn-201001_202012-static.csv)如下：
combination,remark,count,mean_return2
201001-201004,loser,31,-0.12655181641935484
201001-201004,winner,31,-0.022821950322580647
201002-201005,loser,31,-0.006791918741935483
201002-201005,winner,31,0.09927487058064516
201003-201006,loser,32,0.089387154375
201003-201006,winner,32,0.1469420914375
201004-201007,loser,31,0.15881216193548386

我想依據combination計算winner - loser的mean_return2資料，讓資料變成類似：
combination,remark,count,mean_return2
201001-201004,loser,31,-0.12655181641935484
201001-201004,winner,31,-0.022821950322580647
201001-201004,winner - loser,-,0.103729866096774193

之後存成檔案..\data\analysis\momentumNew\oPeriod3_hPeriod3\afterwardReturn-201001_202012-static2.csv

我有一個檔案(..\data\analysis\momentumNew\oPeriod3_hPeriod3\afterwardReturn-201001_202012.csv)：
stock_id,start_date,end_date,SD_close,ED_close,combination,return,RT_%_Rank,remark,RT_rank,start_date2,SD_close2,end_date2,ED_close2,return2
4725,2010/1/4,2010/3/31,69.9,116.86,201001-201004,67%,99.18111293,winner,1,2010/4/1,121.73,2010/6/30,118.89,-0.023330321
6197,2010/1/4,2010/3/31,54.86,80.45,201001-201004,47%,77.81506351,winner,2,2010/4/1,79.58,2010/6/30,59.17,-0.256471475
1234,2010/1/4,2010/3/31,12.27,17.29,201001-201004,41%,71.85002593,winner,3,2010/4/1,17.29,2010/6/30,14.13,-0.182764604
2049,2010/1/4,2010/3/31,23.25,31.86,201001-201004,37%,67.81257732,winner,4,2010/4/1,33.5,2010/6/30,38.08,0.136716418

幫我進行統計，並存成新檔案(..\data\analysis\momentumNew\oPeriod3_hPeriod3\afterwardReturn-201001_202012-static.csv)
1.此檔案的欄位： combination, remark, count, mean_return2
2.以combination、remark欄位分組，計算每一組return2欄位的平均值
3.count欄位紀錄是多少個return2計算出的平均值
4.若mean_return2沒有資料可計算則不紀錄




============
然後我有一個資料夾(..\data\analysis\summary)，
底下有個個年度許多支股票的日收盤價，例如檔案closePrice_2010.csv的部分內容節錄為：
date,stock_id,close
2010-01-04,1101,12.18
2010-01-05,1101,12.61
2010-01-06,1101,12.88
從上面可以看出，2010是股價資料的年份

我有一個檔案(..\data\analysis\momentumNew\oPeriod3_hPeriod3\winner_loser-201001_202012.csv)內容如下：
stock_id,start_date,end_date,SD_close,ED_close,combination,return,RT_%_Rank,remark,RT_rank
1101,2010-01-04,2010-03-31,12.18,10.64,201001-201004,-0.1264367816091953,16.127972617320722,,285.0
1102,2010-01-04,2010-03-31,13.87,12.44,201001-201004,-0.10310021629416,18.555991583841823,,255.0

python給定一個變數：
hPeriod = 3 # Holding Period

我要你幫我進行下面操作：
1.新增start_date2、SD_close2欄位：
	值分別參照closePrice_yyyy.csv檔案內的date、close欄位
	邏輯是假設start_date為2010-01-04，則找尋3(hPeriod)個月後-2010年4月的第一個交易日，同個stock_id的資料列寫入對應資料
2.新增end_date2、ED_close2欄位：
	值分別參照closePrice_yyyy.csv檔案內的date、close欄位
	邏輯是假設end_date為2010-03-31，則找尋3(hPeriod)個月後-2010年6月的最後一個交易日，同個stock_id的資料列寫入對應資料
3.新增return2欄位
	計算以SD_close2股價買入、ED_close2股價賣出的報酬率

操作結果另存新檔(..\data\analysis\momentumNew\oPeriod3_hPeriod3\afterwardReturn-201001_202012.csv)


=========
我有一個檔案內容如下
stock_id,start_date,end_date,SD_close,ED_close,combination,return,RT_%_Rank
1101,2010-01-04,2010-03-31,12.18,10.64,201001-201004,-0.1264367816091953,16.127972617320722
1102,2010-01-04,2010-03-31,13.87,12.44,201001-201004,-0.10310021629416,18.555991583841823
1104,2010-01-04,2010-03-31,7.49,6.62,201001-201004,-0.1161548731642189,17.197738813820596

幫我進行下面處理：
1.新增remark欄位：
	將RT_%_Rank大於99.9以及小於0.1的資料列填入"exclude"
	
2.新增RT_rank欄位：
	以combination分組，排除remark為"exclude"的資料後，填入return欄位在該組的大小排名，
	
3.remark欄位依規則填入：
	以combination分組，排除exclude的資料後，每組RT_rank值落在該組前10%的填入"winner"
	以combination分組，每組RT_rank值落在該組後10%的填入"loser"



===============
恭喜，我們完成了階段任務！
現在我要用上面的result_df資料為基礎，進行以下運算：
1.新增RT_rank欄位：
以combination欄位分組，計算各組return欄位的排名
2.新增RT_%_Rank欄位：
以combination欄位分組，每組return值最大定義為100、return值最小定義為0，
計算每個return值在各組的數值後填入此欄位


===========
我的python程式設定了一些參數如下：
sDt = datetime.strptime('2010/01/01', "%Y/%m/%d") # Start Date
eDt = datetime.strptime('2020/12/31', "%Y/%m/%d") # End Date
oPeriod = 3 # Observer Period (months)
hPeriod = 6 # Holding Period (months)

然後我有一個資料夾(..\data\analysis\summary)，
底下有個個年度許多支股票的日收盤價，例如檔案closePrice_2010.csv的部分內容節錄為：
date,stock_id,close
2010-01-04,1101,12.18
2010-01-05,1101,12.61
2010-01-06,1101,12.88

幫我寫程式，滿足以下要求：
1.產生一個叫做observerReturnList.csv的檔案，存到資料夾..data\analysis\momentumNew底下
2.此檔案的欄位為：stock_id,start_date,end_date,SD_close,ED_close,combination,return_rank
3.填入stock_id,start_date,SD_close欄位：
sDt日期為2010/01/01，表示一開始把時間定錨在2010年1月，資料源對應到closePrice_2010.csv檔案，
逐月找到每一隻股票當月第一個交易日，就是start_date欄位的值，日期格式為yyyy-mm-dd，
而這個月會有幾筆資料填入，取決於資料源找到幾個不同的stock_id資料列。
決定date、stock_id後，便能找到資料源中的close欄位，把此值填入到目標檔案的SD_close欄位
逐月遍歷結束的時間點，為eDt的日期，意即最後一個start_date為2020年12月資料源每支股票最早的日期
(跨年後記得要換檔案尋找資料，如2020年的資料源檔案為closePrice_2020.csv)


太棒了，現在我stock_id,start_date,end_date,SD_close,ED_close,combination欄位都有了
幫我加一個return欄位
1.先把return_rank欄位刪掉
2.return欄位為以SD_close價格買進、ED_close賣出股票得到的報酬率


---------------
謝謝 你完成得非常完美 現在來說明end_date,ED_close,combination欄位如何填寫：
1.每個end_date和同列的start_date固定差距為oPeriod個月，往回推前月月底，例如：
start_date為每支股票在2010年1月的第一個date，end_date為該股票2010年3月的最後一個date(間隔約3個月)
2.ED_close即為end_date對應的close欄位
3.combination欄位是一個格式為yyyymm-yyyymm的欄位，組合規則為：
	前面的yyyymm來自start_date欄位的年月
	後面的yyyymm為start_date欄位的年月推移oPeriod的月數
	(start_date為2010-01-04,則combination為201001-201004)



--------------



================
我有一個資料夾(..\data\FinMind\TW\DailyPriceAdj\20100101-20201231)底下有許多csv檔案，
內容節錄如下：
TWDPadj-1101.csv：
	date,stock_id,Trading_Volume,Trading_money,open,max,min,close,spread,Trading_turnover
	2010-01-04,1101,8299290,283529760,12.08,12.22,12.04,12.18,0.1,2839
	2010-01-05,1101,48059367,1693662333,12.29,12.72,12.25,12.61,0.43,13190
	2010-01-06,1101,36026739,1298754915,12.61,12.93,12.57,12.88,0.27,9057
	
TWDPadj-1102.csv：
	date,stock_id,Trading_Volume,Trading_money,open,max,min,close,spread,Trading_turnover
	2010-01-04,1102,6528735,224652357,13.89,13.91,13.65,13.87,-0.02,2076
	2010-01-05,1102,16662766,586893853,13.93,14.37,13.89,14.17,0.3,5931
	2010-01-06,1102,15819247,564201759,14.21,14.49,14.11,14.27,0.1,4404
我希望你寫一個程式，幫我提取、整合這些資料
1.每個檔案提取其date,stock_id,close欄位
2.將每個檔案的資料以年為單位整合在一起(也就是每個檔案裡會有不同的stock_id，但都是同一年的資料)
3.檔案以年為劃分，檔案名稱格式為：closePrice_yyyy.csv
4.檔案存取目標路徑為：..\data\analysis\summary

============
這是我的程式碼：
### 撈取FindMind的調整後股價資料
outputDir = r'..\data\FinMind\TW\DailyPriceAdj'
stockList = dfTWMVrank['stock_id'].drop_duplicates().tolist()
print("📢 即將撈取[歷史修正股價]資料，股票清單的長度為：", len(stockList))
for stock_id in stockList:
    outputFile = f'{outputDir}/{sDt.strftime("%Y%m%d")}-{eDt.strftime("%Y%m%d")}/TWMV-{stock_id}.csv'
    if os.path.exists(outputFile):
        print("☑️ 檔案已存在：", outputFile)
    else:
        os.makedirs(os.path.dirname(outputFile), exist_ok=True) # 確保資料夾存在
        # 台灣還原股價資料表
        dfSDA = api.taiwan_stock_daily_adj(
            stock_id=stock_id,
            start_date=sDt.strftime("%Y-%m-%d"),
            end_date=eDt.strftime("%Y-%m-%d")
        )
        dfSDA.to_csv(outputFile, index=False, encoding='utf-8-sig')
        print("✅ 檔案存取成功：", outputFile)
因為輸出結果大部分的檔案都有回來
你幫我改寫一下：
如果api回傳失敗訊息，
就嘗試幫我一次取5年的資料，意即10年分兩次取再合併成最後的csv檔
若是嘗試失敗就打印錯誤訊息，繼續抓取下一支股票的資料，不要中斷抓取
==============
我有一份csv資料檔案，內容節錄如下：
stock_id,year_month,mean_market_value
1101,2010-01,110287891611.6
1101,2010-02,97043214846.38461
1101,2010-03,97748995693.08696
1102,2010-01,100895466309.25
1102,2010-02,88710794639.07692
1102,2010-03,90188683774.56522

1.在此檔案增加rank欄位：依據year_month欄位分組，每列資料寫上各組的mean_market_value排名
2.將rank欄位小於200的資料拉出來另存成csv檔


==========================
我有幾份csv資料檔案，放在data資料夾底下，內容節錄如下：
TWMV-1101.csv：
	date,stock_id,market_value
	2010-01-04,1101,112921632307.0
	2010-01-05,1101,116872243350.0
	2010-01-06,1101,119341375251.0

TWMV-1101B.csv：
	date,stock_id,market_value
	2019-01-29,1101B,10180000000.0
	2019-01-30,1101B,10180000000.0
	2019-02-11,1101B,10200000000.0
	2019-02-12,1101B,10200000000.0
	
我想對整個data資料夾的csv檔案進行下列處理：
1.每個檔案分別計算各個月平均的market_value，最後結果會類似：
	stock_id,year_month,mean_market_value
	1101,2010-01,{mean_market_value}
	1101,2010-02,{mean_market_value}
2.上面計算平均值的時候，請排除market_value為零的資料(不計入分母去除)
3.所有檔案分別進行此操作後，計算結果合併成一個csv檔案，欄位為：
	stock_id,year_month,mean_market_value


